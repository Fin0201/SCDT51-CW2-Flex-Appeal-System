@model IEnumerable<ITS_System.Models.ClassSchedule>

@{
    ViewData["Title"] = "Book Class";
}



<h1>Booking</h1>

<h4>Book a Class</h4>
<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <input class="form-control" type="search" placeholder="Search" aria-label="Search" name="searchString">
        <button class="btn btn-info" type="submit">Search</button>
    </div>

</form>





<div class="d-flex flex-wrap justify-content-between">
    @foreach (var item in Model)
    {
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.ClassName)</h5>
                <p class="card-text">
                    <strong>Time and Date:</strong> @Html.DisplayFor(modelItem => item.DateTime) <br />
                    <strong>Instructor:</strong> @Html.DisplayFor(modelItem => item.Instructor.Email) <br />
                    <strong>Max Booking:</strong> @Html.DisplayFor(modelItem => item.MaxNumbersOfBooking) <br />
                    <strong>Room:</strong> @Html.DisplayFor(modelItem => item.Room.Name) <br />
                    <strong>Status:</strong> @Html.DisplayFor(modelItem => item.Status) <br />
                    <input type="submit" value="Create" class="btn btn-primary w-100" />
                </p>
            </div>
        </div>
        }
</div>

@*Search for a class and have buttons to book them*@












<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
